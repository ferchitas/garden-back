openapi: 3.0.3

info:
  title: Garden API
  version: 0.0.1
  description: >-
    This is the api exposed to the garden application
servers:
  - url: http://localhost:8080
    description: >-
      For the moment this is the default url, in the future we will see where this is deployed
paths:
  /plant-type:
    get:
      operationId: getAllPlantTypes
      description: Get all of the plant types if everything is right
      responses:
        '200':
          description: Everything was right, so all of the plant types are returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlantType'
    post:
      operationId: createPlantType
      description: create a new plant type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlantType'
      responses:
        '200':
          description: Everything was right, the plant has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlantType'
    patch:
      operationId: updatePlantType
      description: update a plant type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlantType'
      responses:
        '200':
          description: Everything was right, the plant type has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlantType'
    delete:
      operationId: deletePlantType
      description: delete a plant type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlantType'
      responses:
        '200':
          description: Everything was right, the plant type has been removed
  /plants:
    get:
      operationId: getAllPlants
      description: Get all of the plant if everything is right
      responses:
        '200':
          description: Everything was right, so all of the plants are returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'
    post:
      operationId: createPlant
      description: create a new plant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plant'
      responses:
        '200':
          description: Everything was right, the plant has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
    patch:
      operationId: updatePlant
      description: update a plant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plant'
      responses:
        '200':
          description: Everything was right, the plant has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plant'
        '404':
          description: The plant that you want to update doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorApp'
    delete:
      operationId: deletePlant
      description: delete a plant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plant'
      responses:
        '200':
          description: Everything was right, the plant has been removed
components:
  schemas:
    Plant:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: number
          nullable: false
          example: 123
        name:
          type: string
          nullable: false
          example: Fern 1
        plantType:
          $ref: '#/components/schemas/PlantType'
          nullable: false
    PlantType:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        id:
          type: number
          nullable: false
          example: 123
        name:
          type: string
          nullable: false
          example: Fern
    ErrorApp:
      type: object
      additionalProperties: false
      required:
        - name
        - errorCode
        - httpCode
        - errorType
      properties:
        name:
          type: string
        description:
          type: string
        errorCode:
          type: number
        httpCode:
          type: number
        errorType:
          $ref: '#/components/schemas/ErrorType'
    ErrorType:
      enum:
      - UNKNOWN_ERROR
      - OBJECT_NOT_EXISTING
      - MISSING_FIELD
      default: UNKNOWN_ERROR